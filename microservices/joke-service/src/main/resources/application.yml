server.forward-headers-strategy: framework

management:
  endpoint:
    health:
      show-details: "ALWAYS"
      probes:
        enabled: true
  endpoints:
    web:
      exposure:
        include: "health,info"
  health:
    livenessstate:
      enabled: true
    readinessstate:
      enabled: true

springdoc:
  swagger-ui.path: /api/v1/joke/openapi/swagger-ui.html
  api-docs.path: /api/v1/joke/openapi/v3/api-docs
  packagesToScan: dev.kmunton.joke
  pathsToMatch: /**

api:

  common:
    version: 0.1.0
    title: Lunchtime Joke API
    description: Get amusing dad jokes to read at lunch
    termsOfService: MY TERMS OF SERVICE
    license: MY LICENSE
    licenseUrl: MY LICENSE URL

    externalDocDesc: MY WIKI PAGE
    externalDocUrl: MY WIKI URL
    contact:
      name: K Munton
      url: kmunton.dev
      email: github@kmunton.dev

  responseCodes:
    ok.description: OK
    notFound.description: Not found, no joke returned

  joke:
    get-random-joke:
      description: Returns a random joke
      notes: |
        # Normal response
        If the third party api is up, api will return:
        1. joke id
        1. joke text
        1. joke status

        ## If third party api is down
        404 - A **Not Found** error will be returned




server.port: 7001
spring.zipkin.sender.type: web

spring.application.name: joke

app:
  admin-username: ${ADMIN_USERNAME:admin}
  admin-password: ${ADMIN_PASSWORD:password}


logging:
  level:
    root: INFO
    dev.kmunton.microservices: DEBUG

server.shutdown: graceful
spring.lifecycle.timeout-per-shutdown-phase: 10s
---
spring.config.activate.on-profile: docker

server.port: 80

spring.zipkin.baseUrl: http://${app.admin-username}:${app.admin-password}@zipkin-server:9411/