management:
  endpoint:
    health:
      show-details: "ALWAYS"
      probes:
        enabled: true
  endpoints:
    web:
      exposure:
        include: "health,info"
  health:
    livenessstate:
      enabled: true
    readinessstate:
      enabled: true

server.forward-headers-strategy: framework

springdoc:
  swagger-ui.path: /api/v1/reviews/openapi/swagger-ui.html
  api-docs.path: /api/v1/reviews/openapi/v3/api-docs
  packagesToScan: dev.kmunton.reviewcompositeservice
  pathsToMatch: /**

api:
  common:
    version: 0.1.0
    title: Reviews API
    description: Find and add reviews for each restaurant
    termsOfService: MY TERMS OF SERVICE
    license: MY LICENSE
    licenseUrl: MY LICENSE URL

    externalDocDesc: MY WIKI PAGE
    externalDocUrl: MY WIKI URL
    contact:
      name: K Munton
      url: kmunton.dev
      email: github@kmunton.dev

  responseCodes:
    ok.description: OK
    badRequest.description: Bad Request, invalid format of the request. See response message for more information
    notFound.description: Not found, no restaurant found given id
    unprocessableEntity.description: Unprocessable entity, input parameters caused the processing to fail. See response message for more information

  review:
    get-reviews-by-restaurant-id:
      description: Returns a list of reviews based on restaurant id
      notes: |
        # Normal response
        If the requested id is correct, api will return:
        1. List of reviews
        1. Restaurant information

        # Expected partial and error responses
        In the following cases, only a partial response be created (used to simplify testing of error conditions)

        ## No reviews for that restuarant
        200 - Ok, but no reviews returned

        ## Non-numerical id
        400 - A **Bad Request** error will be returned

        ## Id does not exist
        404 - A **Not Found** error will be returned

        ## Invalid id ie -1
        422 - An **Unprocessable Entity** error will be returned

    post-review-by-restaurant-id:
      description: Add a review based on restaurant id
      notes: |
        # Normal response
        If the requested id is correct, api will return:
        1. Review

        ## Non-numerical id
        400 - A **Bad Request** error will be returned

        ## Id does not exist
        404 - A **Not Found** error will be returned

        ## Invalid id ie -1
        422 - An **Unprocessable Entity** error will be returned


server.port: 7007

spring.application.name: review-composite

app:
  admin-username: ${ADMIN_USERNAME:admin}
  admin-password: ${ADMIN_PASSWORD:password}

logging:
  level:
    root: INFO
    dev.kmunton.microservices: DEBUG

spring.zipkin.sender.type: web

server.shutdown: graceful
spring.lifecycle.timeout-per-shutdown-phase: 10s

---
spring.config.activate.on-profile: docker

server.port: 80

spring.zipkin.baseUrl: http://${app.admin-username}:${app.admin-password}@zipkin-server:9411/