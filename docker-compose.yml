version: '3'
services:
  joke:
    build: microservices/joke-service
    image: lunchtime/joke-service
    env_file: .env
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - ADMIN_USERNAME=${ADMIN_USERNAME}

  geocode:
    build: microservices/geocode-service
    image: lunchtime/geocode-service
    env_file: .env
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - API_KEY=${RAPID_API_KEY}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - ADMIN_USERNAME=${ADMIN_USERNAME}

  restaurant-thirdparty:
    build: microservices/restaurant-third-party-service
    image: lunchtime/restaurant-third-party-service
    env_file: .env
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - API_KEY=${RAPID_API_KEY}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - ADMIN_USERNAME=${ADMIN_USERNAME}

  restaurant:
    build: microservices/restaurant-service
    image: lunchtime/restaurant-service
    env_file: .env
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - POSTGRES_DB_PASSWORD=${POSTGRES_DB_PASSWORD}
      - POSTGRES_DB_HOST=${POSTGRES_DB_HOST}
      - POSTGRES_DB_PORT=${POSTGRES_DB_PORT}
      - POSTGRES_DB_NAME=${POSTGRES_DB_NAME}
      - POSTGRES_DB_USER={POSTGRES_DB_USER}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - ADMIN_USERNAME=${ADMIN_USERNAME}

  site:
    build: microservices/site-service
    image: lunchtime/site-service
    env_file: .env
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - POSTGRES_DB_PASSWORD=${POSTGRES_DB_PASSWORD}
      - POSTGRES_DB_HOST=${POSTGRES_DB_HOST}
      - POSTGRES_DB_PORT=${POSTGRES_DB_PORT}
      - POSTGRES_DB_NAME=${POSTGRES_DB_NAME}
      - POSTGRES_DB_USER={POSTGRES_DB_USER}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - ADMIN_USERNAME=${ADMIN_USERNAME}

  review:
    build: microservices/review-service
    image: lunchtime/review-service
    env_file: .env
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - POSTGRES_DB_PASSWORD=${POSTGRES_DB_PASSWORD}
      - POSTGRES_DB_HOST=${POSTGRES_DB_HOST}
      - POSTGRES_DB_PORT=${POSTGRES_DB_PORT}
      - POSTGRES_DB_NAME=${POSTGRES_DB_NAME}
      - POSTGRES_DB_USER={POSTGRES_DB_USER}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - ADMIN_USERNAME=${ADMIN_USERNAME}

  restaurant-composite:
    build: microservices/restaurant-composite-service
    image: lunchtime/restaurant-composite-service
    env_file: .env
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - ADMIN_USERNAME=${ADMIN_USERNAME}

  review-composite:
    build: microservices/review-composite-service
    image: lunchtime/review-composite-service
    env_file: .env
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - ADMIN_USERNAME=${ADMIN_USERNAME}

  gateway:
    build: spring-cloud/gateway
    image: lunchtime/gateway
    env_file: .env
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - ADMIN_USERNAME=${ADMIN_USERNAME}
    ports:
      - "8080:8080"

  zipkin-server:
    image: openzipkin/zipkin:latest
    environment:
      - STORAGE_TYPE=mem
    ports:
      - "9411"

  zipkin-auth:
    image: usmanager/nginx-basic-auth-proxy:latest
    env_file: .env
    ports:
      - "9411:80"
    environment:
      - BASIC_AUTH_USERNAME=${ADMIN_USERNAME}
      - BASIC_AUTH_PASSWORD=${ADMIN_PASSWORD}
      - PROXY_PASS=http://zipkin-server:9411
    depends_on:
      - zipkin-server

